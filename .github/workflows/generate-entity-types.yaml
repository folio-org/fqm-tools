name: Generate and submit entity types

on:
  # these must be duplicated :(
  workflow_dispatch:
    inputs:
      repository-list:
        description: 'Repository list to generate entity types from, space-separated. Use the same ref format as `run-config.yaml`. Leave blank to use the current list.'
        required: false
        default: ''
        type: string
      force-generate-joins:
        description: 'If join generation should be forced (still generates joins even if not fully resolved)'
        required: false
        default: false
        type: boolean
      force-public:
        description: 'If all entity types should be marked as public (visible in the Lists app)'
        required: false
        default: false
        type: boolean
      base-branch:
        description: 'Branch of `mod-fqm-manager` to use as a base for the PR or `master` if empty'
        required: false
        default: 'master'
        type: string
      created-branch:
        description: 'Branch of `mod-fqm-manager` to make the PR with; if empty, `autogenerated-staging` will be used. No effect if `create-pr` is set to `no`.'
        required: false
        default: 'autogenerated-staging'
        type: string
      create-pr:
        description: If a PR should be created and if it should be non-draft
        required: false
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - draft
          - 'no'
      send-slack:
        description: If Slack messages should be sent alerting about the PR creation and any team's issues
        required: false
        default: true
        type: boolean

  workflow_call:
    inputs:
      repository-list:
        required: false
        default: ''
        type: string
      force-generate-joins:
        required: false
        default: false
        type: boolean
      force-public:
        required: false
        default: false
        type: boolean
      base-branch:
        required: false
        type: string
      created-branch:
        required: false
        type: string
      create-pr:
        required: true
        type: string
      send-slack:
        required: true
        type: boolean

jobs:
  run:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2

      - name: Set config (if custom run)
        if: ${{ inputs.repository-list != '' }}
        run: | # yaml can handle json too
          jq '{"modules": split(" ")}' <<< '"${{ inputs.repository-list }}"' > run-config.yaml

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Clone repositories
        run: bun scripts/entity-generation/1-clone-repositories.ts | tee clone-list.txt
        env:
          DEBUG: '*'

      - name: Force join generation (if enabled)
        if: ${{ inputs.force-generate-joins == 'true' }}
        run: echo " --force-generate-joins " >> extra-params.txt

      - name: Force public entity types (if enabled)
        if: ${{ inputs.force-public == 'true' }}
        run: echo " --force-public " >> extra-params.txt

      - name: Run generation
        run: |
          touch extra-params.txt
          xargs bun scripts/entity-generation/2-create-entity-types.ts $(cat extra-params.txt) < clone-list.txt | tee generation.log
        env:
          DEBUG: '*'

      - name: Login as PR-creating app
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        id: generate-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: folio-org
          repositories: mod-fqm-manager

      - name: Checkout mod-fqm-manager
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          repository: folio-org/mod-fqm-manager
          token: ${{ steps.generate-token.outputs.token }}
          path: mod-fqm-manager
          ref: ${{ inputs.base-branch }}

      - name: Generate report
        id: report
        run: bun scripts/entity-generation/3-generate-report.ts --base-dir mod-fqm-manager --generated-dir out --error-log generation.log | tee report.md

      - run: |
          for i in {1..10000}; do echo 'test length!\n'; done >> report.md

      - name: Send report to GitHub
        run: cat report.md >> $GITHUB_STEP_SUMMARY

      - name: Check report length
        run: |
          if [ $(wc -c < report.md) -gt 65536 ]; then
            echo "Report is too long to display here, view it [here](https://github.com/${{ github.repository_owner }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) ." > report.md
          fi

      - name: Stage changes
        run: bun scripts/entity-generation/4-stage-changes.ts --base-dir mod-fqm-manager --generated-dir out --error-log generation.log

      - name: Stage changes (git)
        run: |
          cd mod-fqm-manager
          git add .

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
        id: create-pr
        if: ${{ inputs.create-pr != 'no' }}
        with:
          token: ${{ steps.generate-token.outputs.token }}
          path: mod-fqm-manager
          branch: ${{ inputs.created-branch || 'autogenerated-staging' }}
          labels: ✨autogenerated✨
          title: Automated entity type updates
          commit-message: Automated entity type updates
          body-path: report.md
          sign-commits: true
          draft: ${{ inputs.create-pr == 'draft' }}
          team-reviewers: ${{ steps.report.outputs.reviewers }}

      - name: Enable Pull Request Automerge
        run: gh pr merge --merge --auto --repo folio-org/mod-fqm-manager "${{ steps.create-pr.outputs.pull-request-number }}"
        if: ${{ inputs.create-pr == 'yes' && steps.create-pr.outputs.pull-request-operation != 'none' }}
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Send Slack messages about PR creation
        if: ${{ inputs.send-slack == true && inputs.create-pr != 'no' && steps.create-pr.outputs.pull-request-operation == 'created' }}
        run: bun scripts/entity-generation/3-generate-report.ts --base-dir mod-fqm-manager --generated-dir out --error-log generation.log --pr-number ${{ steps.create-pr.outputs.pull-request-number }}
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

      - name: Upload generated files
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: generated-result
          path: out

      - name: Upload issue log
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: issues
          path: generation.log
