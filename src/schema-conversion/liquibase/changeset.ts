import { EntityTypeGenerationConfig, EntityTypeGenerationConfigSource } from '@/types';
import debug from 'debug';

const log = {
  debug: debug('fqm-tools:liquibase:debug'),
  warn: debug('fqm-tools:liquibase:warn'),
};

export default function createLiquibaseChangeset(
  source: EntityTypeGenerationConfigSource,
  config: EntityTypeGenerationConfig,
) {
  const schemaName = `$\{tenant_id}_${config.metadata.module}`.replaceAll('-', '_');

  return {
    databaseChangeLog: [
      {
        changeSet: {
          id: `create_view__${source.name}`,
          author: `generated--${config.metadata.team}--${config.metadata.module}`,
          runAlways: true,
          preConditions: {
            onFail: 'CONTINUE',
            preCondition: [
              {
                tableExists: {
                  tableName: source.table,
                  schemaName,
                },
              },
            ],
          },
          createView: {
            replaceIfExists: true,
            viewName: source.name,
            selectQuery: `SELECT * FROM $\{tenant_id}_${schemaName}.${source.table}`,
            remarks: `Generated by fqm-tools for ${config.metadata.module} (${config.metadata.team}) on ${new Date().toISOString()}`,
          },
        },
      },
    ],
  };
}

export function disambiguateSource(source: EntityTypeGenerationConfigSource, config: EntityTypeGenerationConfig) {
  const { table } = source;
  const { module, domain } = config.metadata;

  const shortenedModuleName = module.replace('mod-', '');
  const disambiguatedName = `src__${domain}__${shortenedModuleName}__${table}`.replaceAll('-', '_');

  log.debug('mapped module %o source %o to %o', config.metadata.module, source.name, disambiguatedName);

  return {
    ...source,
    name: disambiguatedName,
    table,
  };
}
